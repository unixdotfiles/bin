#!/usr/local/bin/zsh
trap 'exit 1' INT

flags="bPvU"
build=
ports=1
update_sources=1
verbose=
while getopts "$flags" flag
do
  case "$flag" in
  b)  build=1  ;;
  U)  update_sources= ;;
  P)  ports= ;;
  v)  verbose=1  ;;
  ?)  printf "Usage: %s: [-%s] ...\\n" "$0" "$flags"
      exit 2;;
  esac
done

set -eux

shift $((OPTIND-1))

if [[ -n "$verbose" ]]
then
  set -v
fi

if [ -n "$build" ]
then
  (
    now="$(date +%F-%H-%M-%S)"
    set -e;
    sudo beadm create rebuild-pre-"$now"
    sudo beadm activate rebuild-pre-"$now"
    cd /usr/src &&
    ( [[ -n "$update_sources" ]] && svn up ) &&
    make -s buildworld buildkernel -j34 KERNCONF=EADLER KERNCONFDIR=/home/eax/.conf/freebsd/ &&
    sudo make -s installworld installkernel -j64 KERNCONF=EADLER KERNCONFDIR=/home/eax/.conf/freebsd/ &&
    sudo make -s delete-old
    sudo beadm create rebuild-post-"$now"
    sudo beadm activate rebuild-post-"$now"
  )
  sudo poudriere jail -j amd64-matches-host -u
fi

if [ -n "$ports" ]
then
  ( cd /srv/src/freebsd/ports && [[ -n "$update_sources" ]] && git pull ) || true
  sudo poudriere bulk -j amd64-matches-host -p development $(pkg query -e '%a=0' '%o') || true
fi
sudo pkg upgrade
