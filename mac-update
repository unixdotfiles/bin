#!/bin/sh
# TODO: add error checking, program not exist checking, and non-macOS checking

three_part_version='s/.*([0-9]+\.[0-9]+\.[0-9]+).*/\1/'

skim_temporary_file=$(mktemp)
# this is strictly speaking, not safe, but considering the usecase I'm okay with it
curl -sS https://sourceforge.net/p/skim-app/code/HEAD/tree/trunk/Info.plist?format=raw > "$skim_temporary_file.plist"

calibre_latest_version="$(curl -sSk https://code.calibre-ebook.com/latest)"
RStudio_latest_version="$(curl -IsS http://rstudio.org/download/latest/stable/desktop/mac/RStudio-latest.dmg | grep Location|sed -E $three_part_version)"
Skim_latest_version="$(defaults read $skim_temporary_file CFBundleShortVersionString)"
# the extra .0 is a hack, but leave for now until I see it matters
Audacity_latest_version="$(curl -sS https://api.github.com/repos/audacity/audacity/releases/latest | grep '"name"' | sed -E $three_part_version).0"

check_program_version() {
  program="$1"
  installed="$2"
  current="$3"
  if [ "$installed" != "$current" ]
  then
    printf "%s\t%s latest\t(%s installed)\n" "$program" "$current" "$installed"
  else
    printf "%s up to date (%s installed)\n" "$program" "$installed"
  fi
}

check_installed_app() {
  app="$1"
  latest_version="$2"

  current_ver=$(defaults read "/Applications/$app.app/Contents/Info.plist" CFBundleShortVersionString)

  check_program_version "$app" "$current_ver" "$latest_version"

}

check_installed_app calibre "$calibre_latest_version"
check_installed_app RStudio "$RStudio_latest_version"
check_installed_app Skim "$Skim_latest_version"
check_installed_app Audacity "$Audacity_latest_version"
