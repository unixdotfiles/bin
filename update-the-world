#!/bin/sh
set -x

quit() {
  exit 1
}

__exists () {
  while [ -n "$1" ];
  do
    cmd="$1"; shift
    which "$cmd" >/dev/null 2>&1 || return 1
  done
  return 0;
}

trap quit INT

mac=1
selfupdate=1
while getopts MS flag
do
  case "$flag" in
  M)  mac= ;;
  S)  selfupdate= ;;
  ?)  printf "Usage: %s: [-MS] ...\n" "$0"
      exit 2;;
  esac
done

shift "$((OPTIND - 1))"

for repo in ~/bin ~/misc-scripts ~/.conf
do
  (
    cd "$repo" &&
    git pull --rebase &&
    git submodule update --init --recursive &&
    git push
    )
done

if [ -n "$selfupdate" ]
then
  exec "$0" -S "$@";
fi

(cd ~/bin && ./submodules/update.sh)

_pip_update() {
  pip="$1"
  "$pip" install --user -U $("$pip" list --format=legacy --outdated | awk '!/Could not|ignored/ {print $1}')
}

while true; do sudo -v; sleep 60; kill -0 "$$" || exit; done 2>/dev/null &
if [ "$(uname -s)" = "Darwin" ]
then
  if [ -n "$mac" ]
  then
    printf "y\nd\n"|sudo -H port reclaim
    sudo -H port selfupdate
    port outdated
    sudo -H port -u upgrade outdated
    softwareupdate -i -a --verbose
    mas upgrade
    mac-update
  fi
elif [ "$(uname -s)" = "Linux" ]
then
  sudo -H apt-get update
  sudo -H apt-get dist-upgrade
  sudo -H yum upgrade
else
  sudo -H pkg upgrade
fi
gem update --user-install
sudo npm -g update
apm update --no-confirm
_pip_update pip
_pip_update pip-2.7
_pip_update pip-3.6
#cpan -u
vim -i NONE +PlugUpgrade +qa
(cd ~/.conf && git commit -m "Update VimPlug config" vim/home/autoload/plug.vim && git push)
vim -i NONE +PlugUpdate +PlugClean! +qa
rustup update
rustup self update
cargo search # update registry
stack upgrade
stack update
